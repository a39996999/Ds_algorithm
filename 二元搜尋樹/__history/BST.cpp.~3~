//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "BST.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------


__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
	Memo1 -> Clear() ;
}
//---------------------------------------------------------------------------
struct TreeNode{
public:
	int data ;
	TreeNode* left = nullptr;
	TreeNode* right = nullptr;

	TreeNode(int n): data(n){} ;

	~TreeNode(){
		delete left ;
		delete right ;
		left = nullptr ;
		right = nullptr ;
	}
};
TreeNode* root = nullptr ;

TreeNode* CreateNode(int n){
	TreeNode* node = new TreeNode(n) ;
	return node ;
}

TreeNode* insert(TreeNode* node ,int n){
	if (node == nullptr){
		return CreateNode(n) ;
	}
	else if (n < node->data) {
		node->left = insert(node->left ,n) ;
	}
	else{
		node->right = insert(node->right ,n) ;
	}
	return node ;
}
AnsiString s = "" ;
void rpreorder(TreeNode* node){
	if (node != nullptr) {
		rpreorder(node -> left) ;
		s = s+IntToStr(node -> data)+" " ;
		rpreorder(node -> right) ;
	}
	return ;
}
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	int n = StrToInt(Edit1->Text) ;
	if (root == nullptr) {
		root = CreateNode(n) ;
	}
	else{
		insert(root ,n) ;
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button6Click(TObject *Sender)
{
	s = "" ;
	rpreorder(root) ;
	Memo1 -> Lines -> Add(s) ;
}
//---------------------------------------------------------------------------
